name: Build RPM Package

on:
  push:
    branches:
      - 'master'
      - 'native'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
      - 'native'

jobs:
  build:
    runs-on: ubuntu-latest-16-cores
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Check pre-release
        run: |
          tag="${GITHUB_REF#refs/*/}"
          echo "tag=tag"
          if [[ ${tag} == *alpha* || ${tag} == *beta* ]]
          then
              prerelease=true
          else
              prerelease=false
          fi
          echo "prerelease=$prerelease"
          echo "PRE_RELEASE=$prerelease" >> $GITHUB_ENV

      - uses: dtolnay/rust-toolchain@1.75.0

      - name: Build RPM package
        run: |
          make create-tarball
          make rpm-build-in-docker
          mkdir -p $GITHUB_WORKSPACE/rpmbuild
          cp -r ~/rpmbuild/SRPMS/ $GITHUB_WORKSPACE/rpmbuild/
          cp -r ~/rpmbuild/RPMS/ $GITHUB_WORKSPACE/rpmbuild/
          mkdir -p $GITHUB_WORKSPACE/rpmbuild/SOURCES/
          cp -r /tmp/trusted-network-gateway-*.tar.gz $GITHUB_WORKSPACE/rpmbuild/SOURCES/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpm-packages
          if-no-files-found: error
          path: |
            ./rpmbuild/SOURCES/trusted-network-gateway-*.tar.gz
            ./rpmbuild/SRPMS/*.src.rpm
            ./rpmbuild/RPMS/*/*.rpm

  test:
    strategy:
      fail-fast: false
      matrix:
        # distro: [anolis8, anolis23, alinux3]
        distro: [alinux3]
        include:
          # - distro: anolis8
          #   distro_img: registry.openanolis.cn/openanolis/anolisos:8
          # - distro: anolis23
          #   distro_img: registry.openanolis.cn/openanolis/anolisos:23
          - distro: alinux3
            distro_img: "alibaba-cloud-linux-3-registry.cn-hangzhou.cr.aliyuncs.com/alinux3/alinux3:latest"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    needs: build
    container:
      image: ${{ matrix.distro_img }}
      options: --privileged
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: false

      - name: Install RPM packages
        run: |
          set -e
          set -x

          # test rpm package install
          yum install -y ./rpm-packages/RPMS/*/trusted-network-gateway-*.rpm
          tng --version

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: false

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          prerelease: ${{ env.PRE_RELEASE }}
          files: |
            ./rpm-packages/SOURCES/trusted-network-gateway-*.tar.gz
            ./rpm-packages/SRPMS/*.src.rpm
            ./rpm-packages/RPMS/*/*.rpm
