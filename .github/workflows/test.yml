name: Run Tests on Source Code

on:
  push:
    branches:
      - 'master'
      - 'native'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'master'
      - 'native'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        # distro: [anolis8, anolis23, alinux3]
        distro: [alinux3]
        include:
          # - distro: anolis8
          #   distro_img: registry.openanolis.cn/openanolis/anolisos:8
          # - distro: anolis23
          #   distro_img: registry.openanolis.cn/openanolis/anolisos:23
          - distro: alinux3
            distro_img: "alibaba-cloud-linux-3-registry.cn-hangzhou.cr.aliyuncs.com/alinux3/alinux3:latest"

    runs-on: ubuntu-latest-16-cores
    defaults:
      run:
        shell: bash
    container:
      image: ${{ matrix.distro_img }}
      options: --privileged
    steps:
      - name: Install build dependencies
        run: |
          set -e
          set -x

          # replace the mirror
          sed -i -E 's|https?://mirrors.openanolis.cn/anolis/|https://mirrors.aliyun.com/anolis/|g' /etc/yum.repos.d/*.repo
          sed -i -E 's|https?://mirrors.cloud.aliyuncs.com/|https://mirrors.aliyun.com/|g' /etc/yum.repos.d/*.repo

          if [[ "${{ matrix.distro }}" == anolis23 ]] ; then
              yum install anolis-epao-release -y
          fi

          yum install -y git make

      - name: Prepare attestation-agent
        run: |
          set -e
          set -x

          yum install -y attestation-agent
          RUST_LOG=debug attestation-agent --attestation_sock unix:///run/confidential-containers/attestation-agent/attestation-agent.sock &

      - name: Prepare attestation-service
        run: |
          set -e
          set -x

          yum install -y trustee

          # Prepare certificates
          yum install -y jq openssl
          openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/as-ca.key -out /tmp/as-ca.pem -nodes -subj "/O=Trustee CA" \
              -addext keyUsage=critical,cRLSign,keyCertSign,digitalSignature
          openssl genrsa -out /tmp/as.key 2048
          openssl req -new -key /tmp/as.key -out /tmp/as.csr -subj "/CN=Trustee/O=Trustee CA"
          openssl x509 -req -in /tmp/as.csr -CA /tmp/as-ca.pem -CAkey /tmp/as-ca.key -CAcreateserial -out /tmp/as.pem -days 365 -extensions v3_req -extfile <(echo -e "[v3_req]\nsubjectKeyIdentifier = hash") -sha256

          # Generate attestation-service config
          # The config file is from https://github.com/openanolis/trustee/blob/fe74c919578813da3f80e43011676b169cfc8ef8/attestation-service/config.json
          cat <<EOF | jq '.attestation_token_broker.signer.cert_path="/tmp/as.pem" | .attestation_token_broker.signer.key_path="/tmp/as.key"' > /tmp/config_with_cert.json
          {
              "work_dir": "/var/lib/attestation-service/",
              "rvps_config": {
                  "type": "BuiltIn",
                  "storage": {
                      "type": "LocalFs"
                  }
              },
              "attestation_token_broker": {
                  "type": "Simple",
                  "duration_min": 5
              }
          }
          EOF

          RUST_LOG=debug restful-as --socket 0.0.0.0:8080 --config-file /tmp/config_with_cert.json &

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1.75.0

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Run test script from repo
        run: |
          set -e
          set -x

          # Append dns server
          echo "nameserver 8.8.8.8" >> /etc/resolv.conf
          # Run test
          make run-test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        # We only need to upload coverage report once
        if: ${{ matrix.distro == 'alinux3' }}
        with:
          files: target/codecov.json
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

